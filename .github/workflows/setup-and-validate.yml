name: Build and test kotlin

on:
  workflow_call:
    inputs:
      java_version:
        type: string
        required: false
        default: '21'
      java_options:
        type: string
        default: '-Xmx512m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process'
        required: false

permissions:
  contents: read

jobs:
  kotlin-validate:
    name: validate the Kotlin app
    runs-on: ubuntu-latest

    services:
      localstack:
        image: localstack/localstack:3
        env:
          SERVICES: s3, sqs, sns
          ES_PORT_EXTERNAL: 4571
          DEBUG: ${DEBUG- }
          DATA_DIR: /tmp/localstack/data
          DOCKER_HOST: unix:///var/run/docker.sock
          LAMBDA_EXECUTOR: ${LAMBDA_EXECUTOR- }
          AWS_EXECUTION_ENV: True
          DEFAULT_REGION: eu-west-2
          TMPDIR: /private
        ports:
          - 4567:4566
      postgres:
        image: postgres:15.7
        env:
          POSTGRES_USER: document-management
          POSTGRES_PASSWORD: document-management
          POSTGRES_DB: document-management
        ports:
          - 5433:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d document-management"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - name: Wait for LocalStack to be ready
        run: |
          echo "Waiting for LocalStack to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:4567/health | grep '"status": "running"'; then
              echo "LocalStack is ready!"
              break
            fi
            echo "Waiting for LocalStack... retry $i"
            sleep 5
          done
          if [ $i -eq 30 ]; then
            echo "LocalStack did not start in time."
            exit 1
          fi
      - name: refresh cache
        id: initial-cache
        uses: actions/cache@v4
        env:
          cache-name: kotlin-cache
        with:
          path: |
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
          key: ${{ runner.os }}-gradle-${{ env.cache-name }}-${{ hashFiles('build.gradle.kts') }}
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '${{ inputs.java_version }}'
          cache: 'gradle'
          cache-dependency-path: |
            *.gradle*
            **/gradle-wrapper.properties
      - name: gradlew check
        shell: bash
        run: |
          export JAVA_OPTS="${{ inputs.java_options }}"
          export SPRING_PROFILES_ACTIVE="test" 
          ./gradlew check
      - name: upload the artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: upload kotlin validation results
          path: |
            build/test-results
            build/reports/tests